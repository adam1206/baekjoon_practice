#################
## 13549번
# 10:08 ~ 10:50 뭔가 규칙은 알겠는데 코드를 못짜겠음
#################
## <규칙>
# 걷기: 1초 후에 좌우로 1칸씩
# 순간이동: 0초 후에 우로 현재 좌표의 2배칸으로
# 현재 위치가 0이라면 순간이동 불가!!

## 예제1) 5 17
# 5 -> 4: 1초
# 4 -> 8 -> 16: 0초
# 16 -> 17: 1초     => 총 2초
## 예제2) 13 28
# 28 -> 14
# 14과 13의 거리    => 총 1초
## 예제2) 15 28
# 28 -> 14
# 14과 15의 거리    => 총 1초
## 예제4) 5 28
# 28 -> 14 -> 7
# 7과 5의 거리    => 총 1초

## 아, 가까운 "홀수 찾기" 문제인가?
# 1 -> 2 -> 4 -> 8 -> 16 -> 32 -> ...
# 3 -> 6 -> 12 -> 24 -> 48 -> ...
# 5 -> 10 -> 20 -> 40 -> 80 -> ...
# 7 -> 14 -> 28 -> 56 -> 112 -> ...
# 9 -> 18 -> 36 -> 72 -> 144 -> ...

# N과 K가 각각 홀수, 짝수일 때로 4가지 경우를 나눠야 할듯
from sys import stdin

N, K = map(int, stdin.readline().split())
# K가 홀수, 짝수일 때를 기준으로 먼저 나누기
if K % 2 == 0:
    # while 조건 짜기가 쉽지 않네...
    # 현재처럼 그냥 K-N을 하면 위 예제2)와 같은 것을 못잡음
    while (K-N) > (K//2):
        K = K // 2
else:
    # Hmm...